{"version":3,"sources":["helpers/format-date.ts","helpers/format-type.ts","components/pokemon-card.tsx","models/mock-pokemon.ts","services/pokemon-service.ts","components/pokemon-search.tsx","pages/pokemon-list.tsx","components/loader.tsx","pages/pokemon-detail.tsx","pages/page-not-found.tsx","components/pokemon-form.tsx","pages/pokemon-edit.tsx","models/pokemon.ts","pages/pokemon-add.tsx","services/authentication-service.ts","pages/login.tsx","PrivateRoute.tsx","App.tsx","index.tsx"],"names":["formatDate","date","Date","getDate","getMonth","getFullYear","formatType","type","color","PokemonCard","pokemon","borderColor","useState","setColor","history","useHistory","className","onMouseEnter","onMouseLeave","onClick","id","push","style","src","picture","alt","name","created","types","map","POKEMONS","hp","cp","PokemonService","this","isDev","fetch","then","response","json","catch","error","handleError","Promise","resolve","pokemons","data","isEmpty","find","method","body","JSON","stringify","headers","index","findIndex","filter","term","includes","Object","keys","length","console","process","PokemonSearch","setTerm","setPokemons","placeholder","value","onChange","e","target","searchPokemon","handleInputChange","to","PokemonList","useEffect","getPokemons","position","bottom","right","Loader","PokemonsDetail","match","setPokemon","getPokemon","params","width","margin","PageNotFound","PokemonForm","isEditForm","isValid","form","setForm","hasType","fieldName","fieldValue","newField","isAddForm","validateForm","newForm","startsWith","endsWith","newfield","test","isTypesValid","addPokemon","updatePokemon","onSubmit","preventDefault","handleSubmit","deletePokemon","htmlFor","marginBottom","disabled","checked","concat","currentType","selectType","PokemonEdit","Pokemon","PokemonAdd","getTime","AuthenticationService","username","password","isAuthenticated","setTimeout","Login","message","setMessage","login","PrivateRoute","Component","component","rest","render","props","pathname","App","exact","path","PokemonDetail","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b77dcf56.chunk.js","sourcesContent":["const formatDate = (date: Date = new Date()): string => {\r\n  return `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\r\n};\r\n\r\nexport default formatDate;\r\n","\r\n  const formatType = (type: string): string => {\r\n    let color: string;\r\n   \r\n    switch (type) {\r\n      case 'Feu': \r\n        color = 'red lighten-1'; \r\n        break; \r\n      case 'Eau': \r\n        color = 'blue lighten-1'; \r\n        break; \r\n      case 'Plante': \r\n        color = 'green lighten-1'; \r\n        break; \r\n      case 'Insecte': \r\n        color = 'brown lighten-1'; \r\n        break; \r\n      case 'Normal': \r\n        color = 'grey lighten-3'; \r\n        break; \r\n      case 'Vol': \r\n        color = 'blue lighten-3'; \r\n        break; \r\n      case 'Poison': \r\n        color = 'deep-purple accent-1'; \r\n        break; \r\n      case 'Fée': \r\n        color = 'pink lighten-4'; \r\n        break; \r\n      case 'Psy': \r\n        color = 'deep-purple darken-2'; \r\n        break; \r\n      case 'Electrik': \r\n        color = 'lime accent-1'; \r\n        break; \r\n      case 'Combat': \r\n        color = 'deep-orange'; \r\n        break; \r\n      default: \r\n        color = 'grey'; \r\n        break; \r\n    }\r\n   \r\n    return `chip ${color}`;\r\n  }\r\n\r\n  export default formatType;","import { format } from \"path\";\r\nimport React, { FunctionComponent, useState } from \"react\";\r\nimport formatDate from \"../helpers/format-date\";\r\nimport formatType from \"../helpers/format-type\";\r\nimport Pokemon from \"../models/pokemon\";\r\nimport \"./pokemon-card.css\";\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n// nouveau type\r\ntype Props = {\r\n  pokemon: Pokemon;\r\n  borderColor?: string;\r\n};\r\n\r\nconst PokemonCard: FunctionComponent<Props> = ({\r\n  pokemon,\r\n  borderColor = \"#e15\", // valeur par defaut\r\n}) => {\r\n\r\n  const [color, setColor] = useState<string>();\r\n  // recup historique du nvigateur\r\n  const history = useHistory();\r\n\r\n  const goToPokemon = (id: number) => {\r\n    // redirection\r\n    history.push(`/pokemons/${id}`)\r\n  }\r\n\r\n  // fonction evenement\r\n  const showBorder = () => {\r\n    setColor(borderColor);\r\n  };\r\n  const hideBorder = () => {\r\n    setColor(\"#f5f5f5\");\r\n  };\r\n\r\n\r\n  return (\r\n    // evenement\r\n    <div\r\n      className=\"col s6 m4\"\r\n      onMouseEnter={showBorder}\r\n      onMouseLeave={hideBorder}\r\n      onClick={() => {goToPokemon(pokemon.id)}}\r\n    >\r\n      <div className=\"card horizontal\" style={{ borderColor: color }}>\r\n        <div className=\"card-image\">\r\n          <img src={pokemon.picture} alt={pokemon.name} />\r\n        </div>\r\n        <div className=\"card-stacked\">\r\n          <div className=\"card-content\">\r\n            <p>{pokemon.name}</p>\r\n            <p>\r\n              <small>{formatDate(pokemon.created)}</small>\r\n              {pokemon.types.map(type => (\r\n                <span key={type} className={formatType(type)}>{type}</span>\r\n              ))}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonCard;\r\n","import Pokemon from './pokemon';\r\n   \r\nexport const POKEMONS: Pokemon[] = [\r\n {\r\n  id: 1,\r\n  name: \"Bulbizarre\",\r\n  hp: 25,\r\n  cp: 5,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/001.png\",\r\n  types: [\"Plante\", \"Poison\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 2,\r\n  name: \"Salamèche\",\r\n  hp: 28,\r\n  cp: 6,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/004.png\",\r\n  types: [\"Feu\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 3,\r\n  name: \"Carapuce\",\r\n  hp: 21,\r\n  cp: 4,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/007.png\",\r\n  types: [\"Eau\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 4,\r\n  name: \"Aspicot\",\r\n  hp: 16,\r\n  cp: 2,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/013.png\",\r\n  types: [\"Insecte\", \"Poison\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 5,\r\n  name: \"Roucool\",\r\n  hp: 30,\r\n  cp: 7,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/016.png\",\r\n  types: [\"Normal\", \"Vol\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 6,\r\n  name: \"Rattata\",\r\n  hp: 18,\r\n  cp: 6,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/019.png\",\r\n  types: [\"Normal\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 7,\r\n  name: \"Piafabec\",\r\n  hp: 14,\r\n  cp: 5,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/021.png\",\r\n  types: [\"Normal\", \"Vol\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 8,\r\n  name: \"Abo\",\r\n  hp: 16,\r\n  cp: 4,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/023.png\",\r\n  types: [\"Poison\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 9,\r\n  name: \"Pikachu\",\r\n  hp: 21,\r\n  cp: 7,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/025.png\",\r\n  types: [\"Electrik\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 10,\r\n  name: \"Sabelette\",\r\n  hp: 19,\r\n  cp: 3,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/027.png\",\r\n  types: [\"Normal\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 11,\r\n  name: \"Mélofée\",\r\n  hp: 25,\r\n  cp: 5,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/035.png\",\r\n  types: [\"Fée\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 12,\r\n  name: \"Groupix\",\r\n  hp: 17,\r\n  cp: 8,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/037.png\",\r\n  types: [\"Feu\"],\r\n  created: new Date()\r\n }\r\n];\r\n  \r\nexport default POKEMONS;","import Pokemon from \"../models/pokemon\";\r\nimport POKEMONS from \"../models/mock-pokemon\";\r\n  \r\nexport default class PokemonService {\r\n  \r\n  static pokemons:Pokemon[] = POKEMONS;\r\n  \r\n  static isDev = (!process.env.NODE_ENV || process.env.NODE_ENV === 'development');\r\n  \r\n  static getPokemons(): Promise<Pokemon[]> {\r\n    if(this.isDev) {\r\n      return fetch('http://localhost:3001/pokemons')\r\n      .then(response => response.json())\r\n      .catch(error => this.handleError(error));\r\n    }\r\n  \r\n    return new Promise(resolve => {\r\n      resolve(this.pokemons);\r\n    });\r\n  }\r\n  \r\n  static getPokemon(id: number): Promise<Pokemon|null> {\r\n    if(this.isDev) {\r\n      return fetch(`http://localhost:3001/pokemons/${id}`)\r\n      .then(response => response.json())\r\n      .then(data => this.isEmpty(data) ? null : data)\r\n      .catch(error => this.handleError(error));\r\n    }\r\n  \r\n    return new Promise(resolve => {    \r\n      resolve(this.pokemons.find(pokemon => id === pokemon.id));\r\n    }); \r\n  }\r\n  \r\n  static updatePokemon(pokemon: Pokemon): Promise<Pokemon> {\r\n    if(this.isDev) {\r\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(pokemon),\r\n        headers: { 'Content-Type': 'application/json'}\r\n      })\r\n      .then(response => response.json())\r\n      .catch(error => this.handleError(error));\r\n    }\r\n  \r\n    return new Promise(resolve => {\r\n      const { id } = pokemon;\r\n      const index = this.pokemons.findIndex(pokemon => pokemon.id === id);\r\n      this.pokemons[index] = pokemon;\r\n      resolve(pokemon);\r\n    }); \r\n  }\r\n  \r\n  static deletePokemon(pokemon: Pokemon): Promise<{}> {\r\n    if(this.isDev) {\r\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': 'application/json'}\r\n      })\r\n      .then(response => response.json())\r\n      .catch(error => this.handleError(error));\r\n    }\r\n  \r\n    return new Promise(resolve => {    \r\n      const { id } = pokemon;\r\n      this.pokemons = this.pokemons.filter(pokemon => pokemon.id !== id);\r\n      resolve({});\r\n    }); \r\n  }\r\n  \r\n  static addPokemon(pokemon: Pokemon): Promise<Pokemon> {\r\n    pokemon.created = new Date(pokemon.created);\r\n  \r\n    if(this.isDev) {\r\n      return fetch(`http://localhost:3001/pokemons`, {\r\n        method: 'POST',\r\n        body: JSON.stringify(pokemon),\r\n        headers: { 'Content-Type': 'application/json'}\r\n      })\r\n      .then(response => response.json())\r\n      .catch(error => this.handleError(error));\r\n    }\r\n  \r\n    return new Promise(resolve => {    \r\n      this.pokemons.push(pokemon);\r\n      resolve(pokemon);\r\n    }); \r\n  }\r\n  \r\n  static searchPokemon(term: string): Promise<Pokemon[]> {\r\n    if(this.isDev) {\r\n      return fetch(`http://localhost:3001/pokemons?q=${term}`)\r\n      .then(response => response.json())\r\n      .catch(error => this.handleError(error));\r\n    }\r\n  \r\n    return new Promise(resolve => {    \r\n      const results = this.pokemons.filter(pokemon => pokemon.name.includes(term));\r\n      resolve(results);\r\n    });\r\n  \r\n  }\r\n  \r\n  static isEmpty(data: Object): boolean {\r\n    return Object.keys(data).length === 0;\r\n  }\r\n  \r\n  static handleError(error: Error): void {\r\n    console.error(error);\r\n  }\r\n}","import React, { FunctionComponent, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Pokemon from '../models/pokemon';\r\nimport PokemonService from '../services/pokemon-service';\r\n \r\nconst PokemonSearch: FunctionComponent = () => {\r\n  \r\n  const [term, setTerm] = useState<string>('');\r\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\r\n \r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const term = e.target.value;\r\n    setTerm(term);\r\n \r\n    if(term.length <= 1) {\r\n      setPokemons([]);\r\n      return;\r\n    }\r\n \r\n    PokemonService.searchPokemon(term).then(pokemons => setPokemons(pokemons));\r\n  }\r\n  \r\n  return (\r\n    <div className=\"row\"> \r\n    <div className=\"col s12 m6 offset-m3\"> \r\n      <div className=\"card\"> \r\n      <div className=\"card-content\"> \r\n        <div className=\"input-field\"> \r\n        <input type=\"text\" placeholder=\"Rechercher un pokémon\" value={term} onChange={e => handleInputChange(e)} /> \r\n        </div> \r\n        <div className='collection'>\r\n        {pokemons.map((pokemon) => (\r\n          <Link key={pokemon.id} to={`/pokemons/${pokemon.id}`} className=\"collection-item\">\r\n            {pokemon.name}\r\n          </Link>\r\n        ))}\r\n        </div> \r\n      </div> \r\n      </div> \r\n    </div> \r\n    </div>\r\n  );\r\n}\r\n  \r\nexport default PokemonSearch;","import React, { FunctionComponent, useState, useEffect } from 'react';\r\nimport Pokemon from '../models/pokemon';\r\n// import POKEMONS from '../models/mock-pokemon';\r\nimport PokemonCard from '../components/pokemon-card';\r\n// import usePokemons from '../hooks/pokemon.hook';\r\nimport PokemonService from '../services/pokemon-service';\r\nimport { Link } from 'react-router-dom';\r\nimport PokemonSearch from '../components/pokemon-search';\r\n  \r\nconst PokemonList: FunctionComponent = () => {\r\n  \r\n  // hook personnalisé\r\n  // const pokemons = usePokemons();\r\n\r\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\r\n\r\n  useEffect(() => {\r\n    PokemonService.getPokemons().then(pokemons => setPokemons(pokemons));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"center\">Pokédex</h1>\r\n      <div className=\"container\"> \r\n        <div className=\"row\"> \r\n        <PokemonSearch />\r\n        {pokemons.map(pokemon => (\r\n          <PokemonCard key={pokemon.id} pokemon={pokemon}/>\r\n        ))}\r\n        </div>\r\n        <Link className=\"btn-floating btn-large waves-effect waves-light red z-depth-3\"\r\n        style={{position: 'fixed', bottom: \"25px\", right:'25px'}}\r\n        to=\"/pokemon/add\"\r\n        >\r\n          <i className=\"material-icons\">add</i>\r\n        </Link>\r\n      </div>\r\n    </div> \r\n  );\r\n}\r\n  \r\nexport default PokemonList;","import React, { FunctionComponent } from 'react';\r\n  \r\nconst Loader: FunctionComponent = () => {\r\n   \r\n  return (\r\n    <div className=\"preloader-wrapper big active\"> \r\n      <div className=\"spinner-layer spinner-blue\"> \r\n        <div className=\"circle-clipper left\"> \r\n          <div className=\"circle\"></div> \r\n        </div>\r\n        <div className=\"gap-patch\"> \r\n          <div className=\"circle\"></div> \r\n        </div><div className=\"circle-clipper right\"> \r\n          <div className=\"circle\"></div> \r\n        </div>\r\n      </div> \r\n   </div> \r\n  );\r\n}\r\n   \r\nexport default Loader;","import React, { FunctionComponent, useState, useEffect } from 'react';\r\nimport { RouteComponentProps, Link } from 'react-router-dom';\r\nimport Pokemon from '../models/pokemon';\r\nimport POKEMONS from '../models/mock-pokemon';\r\nimport formatDate from '../helpers/format-date';\r\nimport formatType from '../helpers/format-type';\r\nimport PokemonService from '../services/pokemon-service';\r\nimport Loader from '../components/loader';\r\n  \r\ntype Params = { id: string };\r\n  \r\nconst PokemonsDetail: FunctionComponent<RouteComponentProps<Params>> = ({ match }) => {\r\n    \r\n  const [pokemon, setPokemon] = useState<Pokemon|null>(null);\r\n  \r\n  useEffect(() => {\r\n    PokemonService.getPokemon(+match.params.id).then(pokemon => setPokemon(pokemon));\r\n  }, [match.params.id]);\r\n    \r\n  return (\r\n    <div>\r\n      { pokemon ? (\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m8 offset-m2\"> \r\n            <h2 className=\"header center\">{ pokemon.name }</h2>\r\n            <div className=\"card hoverable\"> \r\n              <div className=\"card-image\">\r\n                <img src={pokemon.picture} alt={pokemon.name} style={{width: '250px', margin: '0 auto'}}/>\r\n                <Link to={`/pokemons/edit/${pokemon.id}`} className=\"btn btn-floating halfway-fab waves-effect waves-light\">\r\n                  <i className=\"material-icons\">edit</i>\r\n                </Link>\r\n              </div>\r\n              <div className=\"card-stacked\">\r\n                <div className=\"card-content\">\r\n                  <table className=\"bordered striped\">\r\n                    <tbody>\r\n                      <tr> \r\n                        <td>Nom</td> \r\n                        <td><strong>{ pokemon.name }</strong></td> \r\n                      </tr>\r\n                      <tr> \r\n                        <td>Points de vie</td> \r\n                        <td><strong>{ pokemon.hp }</strong></td> \r\n                      </tr> \r\n                      <tr> \r\n                        <td>Dégâts</td> \r\n                        <td><strong>{ pokemon.cp }</strong></td> \r\n                      </tr> \r\n                      <tr> \r\n                        <td>Types</td> \r\n                        <td>\r\n                          {pokemon.types.map(type => (\r\n                           <span key={type} className={formatType(type)}>{type}</span>\r\n                          ))}</td> \r\n                      </tr> \r\n                      <tr> \r\n                        <td>Date de création</td> \r\n                        <td>{formatDate(pokemon.created)}</td> \r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n                <div className=\"card-action\">\r\n                  <Link to=\"/\">Retour</Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <h4 className=\"center\"><Loader /></h4>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n  \r\nexport default PokemonsDetail;","import React, { FunctionComponent } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n  \r\nconst PageNotFound: FunctionComponent = () => {\r\n  \r\n  return (\r\n    <div className=\"center\">\r\n      <img src=\"http://assets.pokemon.com/assets/cms2/img/pokedex/full/035.png\" alt=\"Page non trouvée\"/>\r\n      <h1>Hey, cette page n'existe pas !</h1> \r\n      <Link to=\"/\" className=\"waves-effect waves-teal btn-flat\">\r\n        Retourner à l'accueil\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n  \r\nexport default PageNotFound;","import React, { FunctionComponent, useDebugValue, useState } from \"react\";\r\nimport Pokemon from \"../models/pokemon\";\r\nimport formatType from \"../helpers/format-type\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport PokemonService from \"../services/pokemon-service\";\r\n\r\ntype Props = {\r\n  pokemon: Pokemon;\r\n  isEditForm: boolean;\r\n};\r\ntype Field = {\r\n  value?: any;\r\n  error?: string;\r\n  isValid?: boolean;\r\n};\r\ntype Form = {\r\n  picture: Field;\r\n  name: Field;\r\n  hp: Field;\r\n  cp: Field;\r\n  types: Field;\r\n};\r\n\r\nconst PokemonForm: FunctionComponent<Props> = ({ pokemon, isEditForm }) => {\r\n  const [form, setForm] = useState<Form>({\r\n    picture: { value: pokemon.picture },\r\n    name: { value: pokemon.name, isValid: true },\r\n    hp: { value: pokemon.hp, isValid: true },\r\n    cp: { value: pokemon.cp, isValid: true },\r\n    types: { value: pokemon.types, isValid: true },\r\n  });\r\n\r\n  const history = useHistory();\r\n\r\n  const types: string[] = [\r\n    \"Plante\",\r\n    \"Feu\",\r\n    \"Eau\",\r\n    \"Insecte\",\r\n    \"Normal\",\r\n    \"Electrik\",\r\n    \"Poison\",\r\n    \"Fée\",\r\n    \"Vol\",\r\n    \"Combat\",\r\n    \"Psy\",\r\n  ];\r\n\r\n  const hasType = (type: string): boolean => {\r\n    return form.types.value.includes(type);\r\n  };\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const fieldName: string = e.target.name;\r\n    const fieldValue: string = e.target.value;\r\n    const newField: Field = { [fieldName]: { value: fieldValue } };\r\n    setForm({ ...form, ...newField });\r\n  };\r\n\r\n  const selectType = (\r\n    type: string,\r\n    e: React.ChangeEvent<HTMLInputElement>\r\n  ): void => {\r\n    const checked = e.target.checked;\r\n    let newField: Field;\r\n\r\n    if (checked) {\r\n      const newType: string[] = form.types.value.concat([type]);\r\n      newField = { value: newType };\r\n    } else {\r\n      const newType: string[] = form.types.value.filter(\r\n        (currentType: string) => currentType !== type\r\n      );\r\n      newField = { value: newType };\r\n    }\r\n\r\n    setForm({ ...form, ...{ types: newField } });\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    const isFormValid = validateForm();\r\n\r\n    if (isFormValid) {\r\n      pokemon.picture = form.picture.value;\r\n      pokemon.name = form.name.value;\r\n      pokemon.hp = form.hp.value;\r\n      pokemon.cp = form.cp.value;\r\n      pokemon.types = form.types.value;\r\n\r\n      isEditForm ? updatePokemon() : addPokemon();\r\n    }\r\n  };\r\n\r\n  const isAddForm = () => {\r\n    return !isEditForm;\r\n  };\r\n\r\n  const validateForm = () => {\r\n    let newForm: Form = form;\r\n\r\n    // valide url\r\n    if (isAddForm()) {\r\n      const start =\r\n        \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/\";\r\n      const end = \".png\";\r\n\r\n      if (\r\n        !form.picture.value.startsWith(start) ||\r\n        !form.picture.value.endsWith(end)\r\n      ) {\r\n        const errorMsg: string = \"url not valid\";\r\n        const newfield: Field = {\r\n          value: form.picture.value,\r\n          error: errorMsg,\r\n          isValid: false,\r\n        };\r\n        newForm = { ...form, ...{ picture: newfield } };\r\n      } else {\r\n        const newfield: Field = {\r\n          value: form.picture.value,\r\n          error: \"\",\r\n          isValid: true,\r\n        };\r\n        newForm = { ...form, ...{ picture: newfield } };\r\n      }\r\n    }\r\n\r\n    // valide name\r\n    if (!/^[a-zA-Zàéè ]{3,25}$/.test(form.name.value)) {\r\n      const errorMsg: string = \"Le nom du pokemon est requis\";\r\n      const newField: Field = {\r\n        value: form.name.value,\r\n        error: errorMsg,\r\n        isValid: false,\r\n      };\r\n      newForm = { ...newForm, ...{ name: newField } };\r\n    } else {\r\n      const newField: Field = {\r\n        value: form.name.value,\r\n        error: \"\",\r\n        isValid: true,\r\n      };\r\n      newForm = { ...newForm, ...{ name: newField } };\r\n    }\r\n    // valide hp\r\n    if (!/^[0-9]{1,3}$/.test(form.hp.value)) {\r\n      const errorMsg: string = \"les point de vie sont compris entre 0 et 999\";\r\n      const newField: Field = {\r\n        value: form.hp.value,\r\n        error: errorMsg,\r\n        isValid: false,\r\n      };\r\n      newForm = { ...newForm, ...{ hp: newField } };\r\n    } else {\r\n      const newField: Field = {\r\n        value: form.hp.value,\r\n        error: \"\",\r\n        isValid: true,\r\n      };\r\n      newForm = { ...newForm, ...{ hp: newField } };\r\n    }\r\n    // valide cp\r\n    if (!/^[0-9]{1,2}$/.test(form.cp.value)) {\r\n      const errorMsg: string = \"les point de vie sont compris entre 0 et 99\";\r\n      const newField: Field = {\r\n        value: form.cp.value,\r\n        error: errorMsg,\r\n        isValid: false,\r\n      };\r\n      newForm = { ...newForm, ...{ cp: newField } };\r\n    } else {\r\n      const newField: Field = {\r\n        value: form.cp.value,\r\n        error: \"\",\r\n        isValid: true,\r\n      };\r\n      newForm = { ...newForm, ...{ cp: newField } };\r\n    }\r\n\r\n    setForm(newForm);\r\n    return newForm.name.isValid && newForm.cp.isValid && newForm.hp.isValid;\r\n  };\r\n\r\n  const isTypesValid = (type: string): boolean => {\r\n    if (form.types.value.length === 1 && hasType(type)) {\r\n      return false;\r\n    }\r\n    if (form.types.value.length >= 3 && !hasType(type)) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const addPokemon = () => {\r\n    PokemonService.addPokemon(pokemon).then(() => history.push(\"/pokemons\"));\r\n  };\r\n\r\n  const updatePokemon = () => {\r\n    PokemonService.updatePokemon(pokemon).then(() =>\r\n      history.push(`/pokemons/${pokemon.id}`)\r\n    );\r\n  };\r\n\r\n  const deletePokemon = () => {\r\n    PokemonService.deletePokemon(pokemon).then(() => history.push(\"/pokemons\"));\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={(e) => handleSubmit(e)}>\r\n      <div className=\"row\">\r\n        <div className=\"col s12 m8 offset-m2\">\r\n          <div className=\"card hoverable\">\r\n            {isEditForm && (\r\n              <div className=\"card-image\">\r\n                <img\r\n                  src={pokemon.picture}\r\n                  alt={pokemon.name}\r\n                  style={{ width: \"250px\", margin: \"0 auto\" }}\r\n                />\r\n                <span className=\"btn-floating halfway-fab waves-effect waves-light\">\r\n                  <i onClick={deletePokemon} className=\"material-icons\">\r\n                    delete\r\n                  </i>\r\n                </span>\r\n              </div>\r\n            )}\r\n            <div className=\"card-stacked\">\r\n              <div className=\"card-content\">\r\n                {/* Pokemon picture */}\r\n                {isAddForm() && (\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"name\">Image</label>\r\n                    <input\r\n                      id=\"picture\"\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      value={form.picture.value}\r\n                      name=\"picture\"\r\n                      onChange={(e) => handleInputChange(e)}\r\n                    ></input>\r\n                    {form.picture.error && (\r\n                      <div className=\"card-panel red accent-1\">\r\n                        {form.picture.error}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                )}\r\n                {/* Pokemon name */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"name\">Nom</label>\r\n                  <input\r\n                    id=\"name\"\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    value={form.name.value}\r\n                    name=\"name\"\r\n                    onChange={(e) => handleInputChange(e)}\r\n                  ></input>\r\n                  {form.name.error && (\r\n                    <div className=\"card-panel red accent-1\">\r\n                      {form.name.error}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                {/* Pokemon hp */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"hp\">Point de vie</label>\r\n                  <input\r\n                    id=\"hp\"\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    value={form.hp.value}\r\n                    name=\"hp\"\r\n                    onChange={(e) => handleInputChange(e)}\r\n                  ></input>\r\n                  {form.hp.error && (\r\n                    <div className=\"card-panel red accent-1\">\r\n                      {form.hp.error}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                {/* Pokemon cp */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"cp\">Dégâts</label>\r\n                  <input\r\n                    id=\"cp\"\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    value={form.cp.value}\r\n                    name=\"cp\"\r\n                    onChange={(e) => handleInputChange(e)}\r\n                  ></input>\r\n                  {form.cp.error && (\r\n                    <div className=\"card-panel red accent-1\">\r\n                      {form.cp.error}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                {/* Pokemon types */}\r\n                <div className=\"form-group\">\r\n                  <label>Types</label>\r\n                  {types.map((type) => (\r\n                    <div key={type} style={{ marginBottom: \"10px\" }}>\r\n                      <label>\r\n                        <input\r\n                          id={type}\r\n                          type=\"checkbox\"\r\n                          className=\"filled-in\"\r\n                          value={type}\r\n                          disabled={!isTypesValid(type)}\r\n                          checked={hasType(type)}\r\n                          onChange={(e) => selectType(type, e)}\r\n                        ></input>\r\n                        <span>\r\n                          <p className={formatType(type)}>{type}</p>\r\n                        </span>\r\n                      </label>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              <div className=\"card-action center\">\r\n                {/* Submit button */}\r\n                <button type=\"submit\" className=\"btn\">\r\n                  Valider\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PokemonForm;\r\n","import React, { FunctionComponent, useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport PokemonForm from '../components/pokemon-form';\r\nimport Pokemon from '../models/pokemon';\r\nimport POKEMONS from '../models/mock-pokemon';\r\nimport Loader from '../components/loader';\r\n \r\ntype Params = { id: string };\r\n  \r\nconst PokemonEdit: FunctionComponent<RouteComponentProps<Params>> = ({ match }) => {\r\n    \r\n  const [pokemon, setPokemon] = useState<Pokemon|null>(null);\r\n  \r\n  useEffect(() => {\r\n    fetch(`http://localhost:3001/pokemons/${match.params.id}`)\r\n    .then((response) => response.json())\r\n    .then(pokemon => {\r\n      if(pokemon.id) setPokemon(pokemon);\r\n    })\r\n  }, [match.params.id]);\r\n    \r\n  return (\r\n    <div>\r\n      { pokemon ? (\r\n        <div className=\"row\">\r\n            <h2 className=\"header center\">Éditer { pokemon.name }</h2>\r\n            <PokemonForm pokemon={pokemon} isEditForm={true}></PokemonForm>\r\n        </div>\r\n      ) : (\r\n        <h4 className=\"center\"><Loader /></h4>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n  \r\nexport default PokemonEdit;","export default class Pokemon {\r\n    // 1. Typage des propiétés d'un pokémon.\r\n    id: number;\r\n    hp: number;\r\n    cp: number;\r\n    name: string;\r\n    picture: string;\r\n    types: Array<string>;\r\n    created: Date;\r\n     \r\n    // 2. Définition des valeurs par défaut des propriétés d'un pokémon.\r\n    constructor(\r\n     id: number,\r\n     hp: number = 100,\r\n     cp: number = 10,\r\n     name: string = '...',\r\n     picture: string = 'https://assets.pokemon.com/assets/cms2/img/pokedex/detail/XXX.png',\r\n     types: Array<string> = ['Normal'],\r\n     created: Date = new Date()\r\n    ) {\r\n     // 3. Initialisation des propiétés d'un pokémons.\r\n     this.id = id;\r\n     this.hp = hp;\r\n     this.cp = cp;\r\n     this.name = name;\r\n     this.picture = picture;\r\n     this.types = types;\r\n     this.created = created;\r\n    }\r\n   }","import React, { FunctionComponent, useState } from 'react';\r\nimport Pokemon from '../models/pokemon';\r\nimport PokemonForm from '../components/pokemon-form';\r\n\r\nconst PokemonAdd: FunctionComponent = () => {\r\n    const [id] = useState<number>(new Date().getTime());\r\n    const [pokemon] = useState<Pokemon>(new Pokemon(id));\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <h2 className=\"header center\">Ajouter un pokemon</h2>\r\n            <PokemonForm pokemon={pokemon} isEditForm={false}></PokemonForm>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PokemonAdd;","export default class AuthenticationService {\r\nstatic isAuthenticated: boolean = false;\r\nstatic login(username: string, password: string): Promise<boolean> {\r\n    const isAuthenticated = (username === \"pika\" && password == \"pika\");\r\n\r\n    return new Promise(resolve => {\r\n        setTimeout(() => {\r\n            this.isAuthenticated = isAuthenticated;\r\n            resolve(isAuthenticated);\r\n        }, 1000);\r\n\r\n    })\r\n}\r\n}","import React, { FunctionComponent, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport AuthenticationService from '../services/authentication-service';\r\n\r\ntype Field = {\r\n  value?: any,\r\n  error?: string,\r\n  isValid?: boolean\r\n};\r\n\r\ntype Form = {\r\n  username: Field,\r\n  password: Field\r\n}\r\n\r\nconst Login: FunctionComponent = () => {\r\n\r\n  const history = useHistory();\r\n\r\n  const [form, setForm] = useState<Form>({\r\n    username: { value: '' },\r\n    password: { value: '' },\r\n  });\r\n\r\n  const [message, setMessage] = useState<string>('Vous êtes déconnecté pika pika');\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const fieldName: string = e.target.name;\r\n    const fieldValue: string = e.target.value;\r\n    const newField: Field = { [fieldName]: { value: fieldValue } };\r\n\r\n    setForm({ ...form, ...newField});\r\n  }\r\n\r\n  const validateForm = () => {\r\n    let newForm: Form = form;\r\n\r\n    // Validator username\r\n    if(form.username.value.length < 3) {\r\n      const errorMsg: string = 'Votre prénom doit faire au moins 3 caractères de long.';\r\n      const newField: Field = { value: form.username.value, error: errorMsg, isValid: false };\r\n      newForm = { ...newForm, ...{ username: newField } };\r\n    } else {\r\n      const newField: Field = { value: form.username.value, error: '', isValid: true };\r\n      newForm = { ...newForm, ...{ username: newField } };\r\n    }\r\n\r\n    // Validator password\r\n    if(form.password.value.length < 3) {\r\n      const errorMsg: string = 'Votre mot de passe doit faire au moins 3 caractères de long.';\r\n      const newField: Field = {value: form.password.value, error: errorMsg, isValid: false};\r\n      newForm = { ...newForm, ...{ password: newField } };\r\n    } else {\r\n      const newField: Field = { value: form.password.value, error: '', isValid: true };\r\n      newForm = { ...newForm, ...{ password: newField } };\r\n    }\r\n\r\n    setForm(newForm);\r\n\r\n    return newForm.username.isValid && newForm.password.isValid;\r\n  }\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    const isFormValid = validateForm();\r\n    if(isFormValid) {\r\n      setMessage('👉 Tentative de connexion en cours ...');\r\n      AuthenticationService.login(form.username.value, form.password.value).then(isAuthenticated => {\r\n        if(!isAuthenticated) {\r\n          setMessage('🔐 Identifiant ou mot de passe incorrect.');\r\n          return;\r\n        }\r\n        \r\n        history.push('/pokemons');\r\n        \r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={(e) => handleSubmit(e)}>\r\n      <div className=\"row\">\r\n        <div className=\"col s12 m8 offset-m2\">\r\n          <div className=\"card hoverable\">\r\n            <div className=\"card-stacked\">\r\n              <div className=\"card-content\">\r\n                {/* Form message */}\r\n                {message && <div className=\"form-group\">\r\n                  <div className=\"card-panel grey lighten-5\">\r\n                    {message}\r\n                  </div>\r\n                </div>}\r\n                {/* Field username */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\">Identifiant</label>\r\n                  <input id=\"username\" type=\"text\" name=\"username\" className=\"form-control\" value={form.username.value} onChange={e => handleInputChange(e)}></input>\r\n                  {/* error */}\r\n                  {form.username.error &&\r\n                  <div className=\"card-panel red accent-1\"> \r\n                   {form.username.error} \r\n                  </div>} \r\n                </div>\r\n                {/* Field password */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">Mot de passe</label>\r\n                  <input id=\"password\" type=\"password\" name=\"password\" className=\"form-control\" value={form.password.value} onChange={e => handleInputChange(e)}></input>\r\n                  {/* error */}\r\n                  {form.password.error &&\r\n                  <div className=\"card-panel red accent-1\"> \r\n                   {form.password.error} \r\n                  </div>} \r\n                </div>\r\n              </div>\r\n              <div className=\"card-action center\">\r\n                {/* Submit button */}\r\n                <button type=\"submit\" className=\"btn\">Valider</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n \r\nexport default Login;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport AuthenticationService from './services/authentication-service';\r\n  \r\nconst PrivateRoute = ({ component: Component, ...rest }: any) => (\r\n  <Route {...rest} render={(props) => {\r\n    const isAuthenticated = AuthenticationService.isAuthenticated;\r\n    if (!isAuthenticated) {    \r\n      return <Redirect to={{ pathname: '/login' }} />\r\n    }\r\n  \r\n    return <Component {...props} />\r\n  }} />\r\n);\r\n  \r\nexport default PrivateRoute;","import React, { FunctionComponent, useState, useEffect } from \"react\";\r\nimport PokemonList from \"./pages/pokemon-list\";\r\nimport PokemonDetail from \"./pages/pokemon-detail\";\r\n\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nimport PageNotFound from \"./pages/page-not-found\"\r\nimport PokemonEdit from \"./pages/pokemon-edit\"\r\nimport PokemonAdd from \"./pages/pokemon-add\";\r\nimport Login from \"./pages/login\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\n\r\nconst App: FunctionComponent = () => {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        {/* {navbar} */}\r\n        <nav>\r\n          <div className=\"nav-wrapper teal\">\r\n            <Link to=\"/\" className=\"brand-logo center\">\r\n              Pokédex\r\n            </Link>\r\n          </div>\r\n        </nav>\r\n        {/* systeme de gestion des routes */}\r\n        <Switch>\r\n          <PrivateRoute  exact path=\"/\" component={PokemonList} />\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <PrivateRoute exact path=\"/pokemons\" component={PokemonList} />\r\n          <PrivateRoute exact path=\"/pokemon/add\" component={PokemonAdd} />\r\n          <PrivateRoute path=\"/pokemons/edit/:id\" component={PokemonEdit} />\r\n          <PrivateRoute path=\"/pokemons/:id\" component={PokemonDetail} />\r\n          <Route component={PageNotFound} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}